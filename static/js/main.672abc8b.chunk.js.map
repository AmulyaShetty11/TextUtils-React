{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","style","margin","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","link","linkName","role","aria-disabled","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","len","replaceAll","length","string","trim","lengt","split","backgroundColor","color","heading","value","onChange","event","target","rows","cols","newText","showAlert","join","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","defaultProps","App","setAlert","message","setTimeout","_useState3","_useState4","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.672abc8b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize =(word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} style={{margin:'0px'}} >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n       \r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props){\r\n  // const[mode, setMode] = useState('light');\r\n    return(\r\n        <>\r\n        \r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href={props.link}>{props.linkName}</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action 1</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action 2</a></li>\r\n            <li><hr className=\"dropdown-divider\" /></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">About</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n       \r\n      </ul>\r\n    <div className={`form-check form-switch text-${props.mode==='light'? 'Dark' : 'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode </label>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    link: PropTypes.string,\r\n    linkName: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    link: 'https://facebook.com',\r\n    linkName: 'facebook'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\nconst handleUpClick =() => {\r\n    // console.log(\"Uppercase Text Clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n}\r\nconst handleLowClick =() => {\r\n    // console.log(\"Lowercase Text Clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\",'success');\r\n}\r\nconst handleClearClick =() => {\r\n    // console.log(\"Clear\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n}\r\n\r\nconst handleOnChange =(event)=>{\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n}\r\n\r\nconst handleClearExtraSpace =() => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '));\r\n    props.showAlert(\"Extra Space Cleared!\", \"success\");\r\n}\r\n\r\nconst handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0,9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard!\", \"success\");\r\n}\r\n\r\nconst [text,setText]= useState(\"Enter Your Text\");\r\nlet newText = text.replaceAll(\" \",\"\");\r\nlet len = newText.length;\r\nlet string = text.trim();\r\nlet lengt=string.split(\" \").length;\r\nif (string.length===0) {\r\n    lengt = \"0\";\r\n }\r\nelse{\r\n    lengt= text.split(/[ ]+/).length;\r\n}\r\n\r\n  return (\r\n    <>\r\n    <div style={{backgroundColor: props.mode==='dark'?'#212529':'white'}}>  \r\n    <div className=' container mb-3' style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <h1  className=\"form-label\">Text Box:</h1>\r\n        <textarea className=\"exampletextarea\" value={text} onChange={handleOnChange}   style={{backgroundColor:props.mode==='dark'?'#2b2e31': 'white',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\" cols=\"100\"></textarea>\r\n        <div className='mt-4'>\r\n        <button onClick={handleUpClick} className={`mx-2 btn btn-${props.mode==='dark'?'secondary':'primary'}`} >Convert to Uppercase</button>\r\n        <button onClick={handleLowClick} className={`mx-2 btn btn-${props.mode==='dark'?'secondary':'primary'}`}>Convert to Lowercase</button>\r\n        <button onClick={handleClearClick} className={`mx-2 btn btn-${props.mode==='dark'?'secondary':'primary'}`} >Clear Click</button>\r\n        <button onClick={handleClearExtraSpace} className={`mx-2 btn btn-${props.mode==='dark'?'secondary':'primary'}`} >Clear Extra Space</button>\r\n        <button className={`mx-2 btn btn-${props.mode==='dark'?'secondary':'primary'}`}  onClick={handleCopy} >Copy Text</button>\r\n        </div>\r\n    </div>\r\n    <div className=\"container mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary:</h2>\r\n        <p>{lengt} words , {len} characters (excluding the space) and {text.length} (including the space).</p>\r\n        <p>{0.008* text.split(\" \").length} Minutes read</p>\r\n    </div>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h2>Preview</h2>\r\n<p>{text.length>0?text:\"Enter something in the above textbox to preview it here\"}</p>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\n\n// import {BrowserRouter as Router, Route, Link, Routes} from \"react-router-dom\"\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n  const[mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n        setMode('dark');\n        document.body.style.backgroundColor = '#212529';\n        showAlert(\"Dark mode has been enable\", \"success\");\n        document.title = \"TextUtils - Dark Mode\";\n        // setInterval(()=>{\n        //  document.title = \"TextUtils - Dark Mode\";\n        // }, 3000);\n        // setInterval(()=>{\n        //   document.title = \"Thanks for visiting!\";\n        //  }, 1500);\n    }\n    else {\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light mode has been enable\", \"success\")\n        document.title='TextUtils - LightMode';\n    }\n  };\n  \n  \n\n  return (\n    <>\n    {/* <Navbar title=\"Nothing Special\" link=\"https://www.google.com\" linkName={true} /> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div >\n      {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About/>}/> */}\n        {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\"  mode={mode} toggleMode={toggleMode}/>}/> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\"  mode={mode} toggleMode={toggleMode}/>\n      {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}